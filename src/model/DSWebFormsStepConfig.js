/**
 * Workflows APIs
 * Workflows authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: aow@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DSWebFormsStepConfig model module.
 * @module model/DSWebFormsStepConfig
 * @version 1.0.0
 */
class DSWebFormsStepConfig {
    /**
     * Constructs a new <code>DSWebFormsStepConfig</code>.
     * @alias module:model/DSWebFormsStepConfig
     * @param pageUrl {String} 
     */
    constructor(pageUrl) { 
        
        DSWebFormsStepConfig.initialize(this, pageUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pageUrl) { 
        obj['pageUrl'] = pageUrl;
    }

    /**
     * Constructs a <code>DSWebFormsStepConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DSWebFormsStepConfig} obj Optional instance to populate.
     * @return {module:model/DSWebFormsStepConfig} The populated <code>DSWebFormsStepConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DSWebFormsStepConfig();

            if (data.hasOwnProperty('pageUrl')) {
                obj['pageUrl'] = ApiClient.convertToType(data['pageUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DSWebFormsStepConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DSWebFormsStepConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DSWebFormsStepConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['pageUrl'] && !(typeof data['pageUrl'] === 'string' || data['pageUrl'] instanceof String)) {
            throw new Error("Expected the field `pageUrl` to be a primitive type in the JSON string but got " + data['pageUrl']);
        }

        return true;
    }


}

DSWebFormsStepConfig.RequiredProperties = ["pageUrl"];

/**
 * @member {String} pageUrl
 */
DSWebFormsStepConfig.prototype['pageUrl'] = undefined;






export default DSWebFormsStepConfig;

