/**
 * Workflows APIs
 * Workflows authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: aow@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidationErrors from './ValidationErrors';

/**
 * The InvalidWorkflowResponse model module.
 * @module model/InvalidWorkflowResponse
 * @version 1.0.0
 */
class InvalidWorkflowResponse {
    /**
     * Constructs a new <code>InvalidWorkflowResponse</code>.
     * @alias module:model/InvalidWorkflowResponse
     * @param message {String} 
     * @param validationErrors {Array.<module:model/ValidationErrors>} 
     */
    constructor(message, validationErrors) { 
        
        InvalidWorkflowResponse.initialize(this, message, validationErrors);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, message, validationErrors) { 
        obj['message'] = message;
        obj['validationErrors'] = validationErrors;
    }

    /**
     * Constructs a <code>InvalidWorkflowResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvalidWorkflowResponse} obj Optional instance to populate.
     * @return {module:model/InvalidWorkflowResponse} The populated <code>InvalidWorkflowResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvalidWorkflowResponse();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('validationErrors')) {
                obj['validationErrors'] = ApiClient.convertToType(data['validationErrors'], [ValidationErrors]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvalidWorkflowResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvalidWorkflowResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InvalidWorkflowResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        if (data['validationErrors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['validationErrors'])) {
                throw new Error("Expected the field `validationErrors` to be an array in the JSON data but got " + data['validationErrors']);
            }
            // validate the optional field `validationErrors` (array)
            for (const item of data['validationErrors']) {
                ValidationErrors.validateJSON(item);
            };
        }

        return true;
    }


}

InvalidWorkflowResponse.RequiredProperties = ["message", "validationErrors"];

/**
 * @member {String} message
 */
InvalidWorkflowResponse.prototype['message'] = undefined;

/**
 * @member {Array.<module:model/ValidationErrors>} validationErrors
 */
InvalidWorkflowResponse.prototype['validationErrors'] = undefined;






export default InvalidWorkflowResponse;

