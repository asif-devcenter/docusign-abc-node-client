/**
 * Workflows APIs
 * Workflows authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: aow@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetConfigurationInstancesResponseConfigInstancesInner from './GetConfigurationInstancesResponseConfigInstancesInner';

/**
 * The GetConfigurationInstancesResponse model module.
 * @module model/GetConfigurationInstancesResponse
 * @version 1.0.0
 */
class GetConfigurationInstancesResponse {
    /**
     * Constructs a new <code>GetConfigurationInstancesResponse</code>.
     * @alias module:model/GetConfigurationInstancesResponse
     */
    constructor() { 
        
        GetConfigurationInstancesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetConfigurationInstancesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetConfigurationInstancesResponse} obj Optional instance to populate.
     * @return {module:model/GetConfigurationInstancesResponse} The populated <code>GetConfigurationInstancesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetConfigurationInstancesResponse();

            if (data.hasOwnProperty('workflowDefinitionId')) {
                obj['workflowDefinitionId'] = ApiClient.convertToType(data['workflowDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('configInstances')) {
                obj['configInstances'] = ApiClient.convertToType(data['configInstances'], [GetConfigurationInstancesResponseConfigInstancesInner]);
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetConfigurationInstancesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetConfigurationInstancesResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['workflowDefinitionId'] && !(typeof data['workflowDefinitionId'] === 'string' || data['workflowDefinitionId'] instanceof String)) {
            throw new Error("Expected the field `workflowDefinitionId` to be a primitive type in the JSON string but got " + data['workflowDefinitionId']);
        }
        if (data['configInstances']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['configInstances'])) {
                throw new Error("Expected the field `configInstances` to be an array in the JSON data but got " + data['configInstances']);
            }
            // validate the optional field `configInstances` (array)
            for (const item of data['configInstances']) {
                GetConfigurationInstancesResponseConfigInstancesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} workflowDefinitionId
 */
GetConfigurationInstancesResponse.prototype['workflowDefinitionId'] = undefined;

/**
 * @member {Array.<module:model/GetConfigurationInstancesResponseConfigInstancesInner>} configInstances
 */
GetConfigurationInstancesResponse.prototype['configInstances'] = undefined;

/**
 * @member {Number} count
 */
GetConfigurationInstancesResponse.prototype['count'] = undefined;






export default GetConfigurationInstancesResponse;

