/**
 * Workflows APIs
 * Workflows authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: aow@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DSIdvStepInputRetryLimit from './DSIdvStepInputRetryLimit';
import StringOrVariableOrTransformation from './StringOrVariableOrTransformation';

/**
 * The DSIdvStepInput model module.
 * @module model/DSIdvStepInput
 * @version 1.0.0
 */
class DSIdvStepInput {
    /**
     * Constructs a new <code>DSIdvStepInput</code>.
     * @alias module:model/DSIdvStepInput
     * @param textColorBranding {module:model/StringOrVariableOrTransformation} 
     * @param backgroundColorBranding {module:model/StringOrVariableOrTransformation} 
     * @param expectedFullName {module:model/StringOrVariableOrTransformation} 
     * @param retryLimit {module:model/DSIdvStepInputRetryLimit} 
     */
    constructor(textColorBranding, backgroundColorBranding, expectedFullName, retryLimit) { 
        
        DSIdvStepInput.initialize(this, textColorBranding, backgroundColorBranding, expectedFullName, retryLimit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, textColorBranding, backgroundColorBranding, expectedFullName, retryLimit) { 
        obj['textColorBranding'] = textColorBranding;
        obj['backgroundColorBranding'] = backgroundColorBranding;
        obj['expectedFullName'] = expectedFullName;
        obj['retryLimit'] = retryLimit;
    }

    /**
     * Constructs a <code>DSIdvStepInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DSIdvStepInput} obj Optional instance to populate.
     * @return {module:model/DSIdvStepInput} The populated <code>DSIdvStepInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DSIdvStepInput();

            if (data.hasOwnProperty('textColorBranding')) {
                obj['textColorBranding'] = StringOrVariableOrTransformation.constructFromObject(data['textColorBranding']);
            }
            if (data.hasOwnProperty('backgroundColorBranding')) {
                obj['backgroundColorBranding'] = StringOrVariableOrTransformation.constructFromObject(data['backgroundColorBranding']);
            }
            if (data.hasOwnProperty('expectedFullName')) {
                obj['expectedFullName'] = StringOrVariableOrTransformation.constructFromObject(data['expectedFullName']);
            }
            if (data.hasOwnProperty('retryLimit')) {
                obj['retryLimit'] = DSIdvStepInputRetryLimit.constructFromObject(data['retryLimit']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DSIdvStepInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DSIdvStepInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DSIdvStepInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `textColorBranding`
        if (data['textColorBranding']) { // data not null
          StringOrVariableOrTransformation.validateJSON(data['textColorBranding']);
        }
        // validate the optional field `backgroundColorBranding`
        if (data['backgroundColorBranding']) { // data not null
          StringOrVariableOrTransformation.validateJSON(data['backgroundColorBranding']);
        }
        // validate the optional field `expectedFullName`
        if (data['expectedFullName']) { // data not null
          StringOrVariableOrTransformation.validateJSON(data['expectedFullName']);
        }
        // validate the optional field `retryLimit`
        if (data['retryLimit']) { // data not null
          DSIdvStepInputRetryLimit.validateJSON(data['retryLimit']);
        }

        return true;
    }


}

DSIdvStepInput.RequiredProperties = ["textColorBranding", "backgroundColorBranding", "expectedFullName", "retryLimit"];

/**
 * @member {module:model/StringOrVariableOrTransformation} textColorBranding
 */
DSIdvStepInput.prototype['textColorBranding'] = undefined;

/**
 * @member {module:model/StringOrVariableOrTransformation} backgroundColorBranding
 */
DSIdvStepInput.prototype['backgroundColorBranding'] = undefined;

/**
 * @member {module:model/StringOrVariableOrTransformation} expectedFullName
 */
DSIdvStepInput.prototype['expectedFullName'] = undefined;

/**
 * @member {module:model/DSIdvStepInputRetryLimit} retryLimit
 */
DSIdvStepInput.prototype['retryLimit'] = undefined;






export default DSIdvStepInput;

