/**
 * Workflows APIs
 * Workflows authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: aow@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CancelResponse from '../model/CancelResponse';
import ErrorResponse from '../model/ErrorResponse';
import WorkflowInstance from '../model/WorkflowInstance';
import WorkflowInstancesList from '../model/WorkflowInstancesList';
import WorkflowStepHistoryList from '../model/WorkflowStepHistoryList';

/**
* WorkflowInstanceManagement service.
* @module api/WorkflowInstanceManagementApi
* @version 1.0.0
*/
export default class WorkflowInstanceManagementApi {

    /**
    * Constructs a new WorkflowInstanceManagementApi. 
    * @alias module:api/WorkflowInstanceManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cancelWorkflowInstance operation.
     * @callback module:api/WorkflowInstanceManagementApi~cancelWorkflowInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CancelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancels a running workflow instance.
     * Cancels a running workflow instance.
     * @param {String} accountId Account ID
     * @param {String} instanceId DS Workflow Instance Id (dacId)
     * @param {module:api/WorkflowInstanceManagementApi~cancelWorkflowInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CancelResponse}
     */
    cancelWorkflowInstance(accountId, instanceId, callback) {
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling cancelWorkflowInstance");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling cancelWorkflowInstance");
      }

      let pathParams = {
        'accountId': accountId,
        'instanceId': instanceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['docusignAccessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CancelResponse;
      return this.apiClient.callApi(
        '/management/accounts/{accountId}/instances/{instanceId}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowHistory operation.
     * @callback module:api/WorkflowInstanceManagementApi~getWorkflowHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkflowStepHistoryList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get List of Step Histories
     * Returns a list of step history for a workflow instance
     * @param {String} accountId Account ID
     * @param {String} instanceId DS Workflow Instance Id (dacId)
     * @param {module:api/WorkflowInstanceManagementApi~getWorkflowHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkflowStepHistoryList}
     */
    getWorkflowHistory(accountId, instanceId, callback) {
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getWorkflowHistory");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling getWorkflowHistory");
      }

      let pathParams = {
        'accountId': accountId,
        'instanceId': instanceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['docusignAccessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowStepHistoryList;
      return this.apiClient.callApi(
        '/management/accounts/{accountId}/instances/{instanceId}/history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowInstance operation.
     * @callback module:api/WorkflowInstanceManagementApi~getWorkflowInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkflowInstance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Workflow Instance Details
     * Returns the details for a specific instance for a deployed workflow definition.
     * @param {String} accountId Account ID
     * @param {String} workflowDefinitionId Workflow Definition ID
     * @param {String} instanceId DS Workflow Instance Id (dacId)
     * @param {module:api/WorkflowInstanceManagementApi~getWorkflowInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkflowInstance}
     */
    getWorkflowInstance(accountId, workflowDefinitionId, instanceId, callback) {
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getWorkflowInstance");
      }
      // verify the required parameter 'workflowDefinitionId' is set
      if (workflowDefinitionId === undefined || workflowDefinitionId === null) {
        throw new Error("Missing the required parameter 'workflowDefinitionId' when calling getWorkflowInstance");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling getWorkflowInstance");
      }

      let pathParams = {
        'accountId': accountId,
        'workflowDefinitionId': workflowDefinitionId,
        'instanceId': instanceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['docusignAccessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowInstance;
      return this.apiClient.callApi(
        '/management/accounts/{accountId}/workflowDefinitions/{workflowDefinitionId}/instances/{instanceId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowInstances operation.
     * @callback module:api/WorkflowInstanceManagementApi~getWorkflowInstancesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkflowInstancesList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get List of Workflow Instances
     * Returns the list of instances for a deployed workflow definition.
     * @param {String} accountId Account ID
     * @param {String} workflowDefinitionId Workflow Definition ID
     * @param {module:api/WorkflowInstanceManagementApi~getWorkflowInstancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkflowInstancesList}
     */
    getWorkflowInstances(accountId, workflowDefinitionId, callback) {
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getWorkflowInstances");
      }
      // verify the required parameter 'workflowDefinitionId' is set
      if (workflowDefinitionId === undefined || workflowDefinitionId === null) {
        throw new Error("Missing the required parameter 'workflowDefinitionId' when calling getWorkflowInstances");
      }

      let pathParams = {
        'accountId': accountId,
        'workflowDefinitionId': workflowDefinitionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['docusignAccessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WorkflowInstancesList;
      return this.apiClient.callApi(
        '/management/accounts/{accountId}/workflowDefinitions/{workflowDefinitionId}/instances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
